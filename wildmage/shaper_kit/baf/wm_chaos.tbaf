import { $tra, LOCALS } from "ielib";
import { ActionListEmpty, AddSpecialAbility, ApplySpellRES, Continue, DisplayString, Global, LevelLT, Myself, NoAction, PartyRested, RandomNumLT, ReallyForceSpellRES, SetDialog, SetGlobal, StartDialog } from "ielib/bg2";
import { haveWizardSpells, randomEffect, SLEEP_MAX_ROLL } from "./lib.wm_chaos";

//---------------------------------------------------------------------
//---------------------------------------------------------------------
//           ----------------------------------------
//          ----   Spellshaper's Override Script  ----
//           ----------------------------------------
//---------------------------------------------------------------------
//---------------------------------------------------------------------
// Purpose:
//
// 1. Class abilities on Levelup
//
// 2. "Weave Spell" ability can be used as long as Spells are memorized
//
// 3. Wild surges after rest
//
// Local Variables:
//
// WM_LEVEL:  Gained Class-Abilities for all levels up to this one
//
// WM_WEAVE:     1: Has just used Weave Spell Ability  (set by spell "WM_WEAVE")
//
//----------------------------------------------------------------------
//----------------------------------------------------------------------


// ----------------------------------------------------
// Random Wild Surge
// ----------------------------------------------------

if (PartyRested() && RandomNumLT(SLEEP_MAX_ROLL, 9)) {
    NoAction()
}

// "Pretty Sparkles" -> Wild Magic 30: Pretty Sparkles
randomEffect(15, 397, "SPWM130")
// "What's this in my pocket?" => Add random treasure...
randomEffect(18, 420, "WM_DREAM")
// "I've always said that bird magic is the most difficult." => Wild Magic 34: "Bird Magic"
randomEffect(19, 405, "SPWM134")
// "Squirrels... Everywhere squirrels!" => Wild Magic 03: Squirrels
randomEffect(20, 316, "SPWM103")
// "What's this?!" => Wild Magic 59: Weapons Glow
randomEffect(21, 27777, "SPWM159")
// "Ahh, no! Help!" => Wild Magic 29: Caster Invisible
randomEffect(22, 1468, "SPWI206")
// "Ahh, no! Help!" => Wild Magic 05: Caster Glows
randomEffect(23, 1468, "SPWM105")
// "Ahh, no! Help!" => Wild Magic 45: "Hiccup"
randomEffect(24, 1468, "SPWM145")
// "Ahh, no! Help!" => Wild Magic 07: "Sex Changes"
randomEffect(25, 1468, "SPWM107")
// "Ahh, no! Help!" => Wild Magic 83: Polymorph into Squirrel
randomEffect(26, 1468, "wm_sqrl")
// "Ahh, no! Help!" => Wild Magic 13: Polymorph into Wolf
randomEffect(27, 1468, "SPWM113")
// "Berries in my pocket." => Wild Magic 38: Goodberries
randomEffect(28, 1468, "SPPR207")
// "Gems!" => Wild Magic 36: Gems
randomEffect(29, 1468, "SPWM136")



//------------------------------------------------------------------
// -------------------------------------------------------
//  "Weave Spell" Ability:
//
//  WM_WEAVE sets the local variable "WM_WEAVE" to 1
//
//  When variable is set to 1, and any Wizard Spell is
//  memorized then "WM_WAV_1" is cast, else the ability fails.
//
// --------------------------------------------------------
//------------------------------------------------------------------
/**
 * Tracks "Weave Spell" casting.
 */
const LVAR_weaveSpell = "wm_Weave"

// "HaveAnySpells" doesn't work here, because it includes innate abilities.
if (Global(LVAR_weaveSpell, LOCALS, 1) && haveWizardSpells()) {
    ReallyForceSpellRES("WM_WAV_1", Myself)  // Weave Spell....
    SetGlobal(LVAR_weaveSpell, LOCALS, 0)
}

// Still 1 = No spells memorized...
if (Global(LVAR_weaveSpell, LOCALS, 1)) {
    // "You don't have any suitable spells memorized."
    DisplayString(Myself, $tra(30121))
    // Wild Magic 30: Pretty Sparkles
    ApplySpellRES("SPWM130", Myself)
    SetGlobal(LVAR_weaveSpell, LOCALS, 0)
}


//------------------------------------------------------------------
// ----------------------------------------------------
//  Levelup:
//
//  -1 Level 1 spell at Level 4
//  -1 Level 9 spell at Level 20 (Workaround...)
//  +1 Level 8/9 spell at Level 45
//
//  Gain "Shape Spell" at Level 10
//  Gain "Weave Spell" at Level 01,03,05,07,09,12,15,18,21,24,27,30,33,36,39,42,45,48
//  May Select Feat at Level    01,03,05,07,09,12,15,18,21,24,27,30,33,36,39,42,45,48
//  Gain "Weaveshear" at Level  01,         09,      18,      27,      36,      45
//  THAC0 reduced by 1 at Level       05,      12,   18,   24,   30,   36,   42,   48
//
// ----------------------------------------------------
//------------------------------------------------------------------
/** Tracks whether levelup procedures have been applied */
const LVAR_wmLevel = "wm_level"
/** Feat selection dialog */
const RES_dialog = "WM_LEVEL"

/** True if levelup block for the actual level hasn't run yet */
function checkWmLevel(levelVar: number, actualLevelLT: number) {
    return Global(LVAR_wmLevel, LOCALS, levelVar) && !LevelLT(Myself, actualLevelLT) && ActionListEmpty()
}

/** Add Weave Spell */
function addWeave() {
    AddSpecialAbility("wm_weave")
}
/** Add Weaveshear ability */
function addShear() {
    AddSpecialAbility("wm_shear")
}
/** "THAC0 Reduced by 1" */
function improveThac0() {
    ApplySpellRES("wm_#thac", Myself)
}

/** Select Feat dialog */
function selectFeat() {
    StartDialog(RES_dialog, Myself)
    SetDialog("")
}

/** Set LVAR_wmLevel to new value and continue script */
function setWmLevel(newLevel: number) {
    SetGlobal(LVAR_wmLevel, LOCALS, newLevel)
    Continue()
}

/** Add 1 Weave, 1 feat, bump `LVAR_wmLevel` to `actualLevelLT` */
function standardLevelUp(levelVar: number, actualLevelLT: number) {
    if (checkWmLevel(levelVar, actualLevelLT)) {
        addWeave()
        selectFeat()
        setWmLevel(actualLevelLT)
    }
}

// Level 3
standardLevelUp(1, 3)

// Level 5
if (checkWmLevel(3, 5)) {
    addWeave()
    improveThac0()
    ApplySpellRES("wm_chao1", Myself)  // (-1 Level 1 spell...)
    selectFeat()
    setWmLevel(5)
}

// Level 5
standardLevelUp(5, 7)

// Level 9
if (checkWmLevel(7, 9)) {
    addWeave()
    addShear()
    selectFeat()
    setWmLevel(9)
}

// Level 10
if (checkWmLevel(9, 10)) {
    AddSpecialAbility("wm_shap")    // Shape Spell
    setWmLevel(10)
}


// Level 12
if (checkWmLevel(10, 12)) {
    addWeave()
    improveThac0()
    selectFeat()
    setWmLevel(12)
}

// Level 15
standardLevelUp(12, 15)

// Level 17
if (checkWmLevel(15, 17)) {
    // (-1 Level 8 spell, Workaround...)
    // Less than 0 spells wrap around to 255..
    ApplySpellRES("wm_chao2", Myself)
    setWmLevel(17)
}

// Level 18
if (checkWmLevel(17, 18)) {
    addWeave()
    addShear()
    improveThac0()
    selectFeat()
    setWmLevel(18)
}

// Level 20
if (checkWmLevel(18, 20)) {
    // (-1 Level 9 spell, Workaround...)
    // Less than 0 spells wrap around to 255..
    ApplySpellRES("wm_chao3", Myself)
    setWmLevel(20)
}

// Level 21
standardLevelUp(20, 21)

// Level 24
if (checkWmLevel(21, 24)) {
    addWeave()
    improveThac0()
    selectFeat()
    setWmLevel(24)
}

// Level 27
if (checkWmLevel(24, 27)) {
    addWeave()
    addShear()
    selectFeat()
    setWmLevel(27)
}


// Level 30
if (checkWmLevel(27, 30)) {
    addWeave()
    improveThac0()
    selectFeat()
    setWmLevel(30)
}

// Level 33
standardLevelUp(30, 33)

// Level 36
if (checkWmLevel(33, 36)) {
    addWeave()
    addShear()
    improveThac0()
    selectFeat()
    setWmLevel(36)
}

// Level 39
standardLevelUp(36, 39)

// Level 42
if (checkWmLevel(39, 42)) {
    addWeave()
    improveThac0()
    selectFeat()
    setWmLevel(42)
}

// Level 45
if (checkWmLevel(42, 45)) {
    addWeave()
    addShear()
    ApplySpellRES("wm_chao4", Myself)  // (+1 Level 8/9 spell)
    selectFeat()
    setWmLevel(45)
}

// Level 48
if (checkWmLevel(45, 48)) {
    addWeave()
    improveThac0()
    selectFeat()
    setWmLevel(48)
}
